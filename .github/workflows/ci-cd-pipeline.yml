name: CI-CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pre-commit

      # Run pre-commit auto-fix
      - name: Run pre-commit auto-fix
        run: |
          pre-commit run --all-files

      # Lint check (flake8)
      - name: Run flake8
        run: flake8 src tests

      # Test (pytest)
      - name: Run pytest
        run: pytest tests

  build-and-publish:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      # Checkout repository
      - uses: actions/checkout@v3

      # Set up Docker Buildx (for advanced build)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to DockerHub (replace with GHCR if you want GitHub Container Registry)
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/flask-test-app:latest


      - name: Get image digest
        run: echo ${{ steps.build-and-publish.outputs.digest }}

  deploy:
    name: ðŸš€ Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build-and-publish

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: ðŸ”‘ Decode SSH key
        run: |
          echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > private_key.pem
          chmod 600 private_key.pem
          echo "âœ… Private key decoded and permission set."
          echo "Key size:" $(wc -c < private_key.pem)
          head -n 5 private_key.pem
        env:
          SSH_PRIVATE_KEY_BASE64: ${{ secrets.SSH_PRIVATE_KEY_BASE64 }}

      - name: ðŸš€ Deploy on AWS EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: private_key.pem
          script: |
            echo "ðŸ”„ Pulling latest Docker image..."
            docker pull abdullahalbaki/flask-test-app:latest

            echo "ðŸ§¹ Stopping old container..."
            docker stop flask-test-app || true
            docker rm flask-test-app || true

            echo "ðŸš€ Running new container..."
            docker run -d -p 5000:5000 --name flask-test-app abdullahalbaki/flask-test-app:latest

            echo "âœ… Deployment finished successfully!"
